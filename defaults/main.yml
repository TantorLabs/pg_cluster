---

patroni_pg_version: 12
patroni_pg_exists: false

patroni_config_dir: /etc/patroni
patroni_system_user: postgres
patroni_system_group: postgres

patroni_exec_start_pre: "/bin/mkdir -m 2750 -p /var/run/postgresql/{{ patroni_pg_version }}-main.pg_stat_tmp"

patroni_pip_packages:
  - { name: "setuptools", state: "latest",  umask: "0022", executable: "pip3" }
  - { name: "patroni[etcd]", state: "present", umask: "0022", executable: "pip3" }

patroni_replication_username: replicator
patroni_replication_password: repuserpasswd
patroni_superuser_username: postgres
patroni_superuser_password: supersecretpostgrespasswd

# https://patroni.readthedocs.io/en/latest/SETTINGS.html#global-universal
patroni_scope: main
patroni_namespace: /service/
patroni_name: "{{ inventory_hostname }}"

# https://patroni.readthedocs.io/en/latest/SETTINGS.html#log
patroni_log_destination: stderr
patroni_log_level: INFO
patroni_log_format: "%(asctime)s %(levelname)s: %(message)s"
patroni_log_dateformat: ""
patroni_log_max_queue_size: 1000
patroni_log_dir: /var/log/patroni
patroni_log_file_num: 4
patroni_log_file_size: 25000000
patroni_log_loggers:
  - { module: "patroni.postmaster", level: "WARNING" }
  - { module: "urllib3",            level: "DEBUG" }

# https://patroni.readthedocs.io/en/latest/SETTINGS.html#rest-api
patroni_restapi_listen: 0.0.0.0:8008
patroni_restapi_connect_address: "{{ ansible_host }}:8008"
patroni_restapi_certfile: ""
patroni_restapi_keyfile: ""
patroni_restapi_username: ""
patroni_restapi_password: ""

# https://patroni.readthedocs.io/en/latest/SETTINGS.html#etcd
patroni_etcd_host: ""
patroni_etcd_hosts: "{% for host in groups['inv_etcd'] %}{{ hostvars[host]['ansible_default_ipv4'].address }}:{{ etcd_port_client }}{% if not loop.last %},{% endif %}{% endfor %}"
patroni_etcd_use_proxies: false
patroni_etcd_url: ""
patroni_etcd_proxy: ""
patroni_etcd_srv: ""
patroni_etcd_protocol: https
patroni_etcd_username: ""
patroni_etcd_password: ""
patroni_etcd_cacert: "/etc/patroni/ca.pem"
patroni_etcd_cert: "/etc/patroni/{{ inventory_hostname }}.pem"
patroni_etcd_key: "/etc/patroni/{{ inventory_hostname }}-key.pem"

# https://patroni.readthedocs.io/en/latest/SETTINGS.html#bootstrap-configuration
patroni_bootstrap_dcs_ttl: 30
patroni_bootstrap_dcs_loop_wait: 10
patroni_bootstrap_dcs_retry_timeout: 10
patroni_bootstrap_dcs_maximum_lag_on_failover: 1048576
patroni_bootstrap_dcs_master_start_timeout: 300
patroni_bootstrap_dcs_synchronous_mode: false
patroni_bootstrap_dcs_synchronous_mode_strict: false
patroni_bootstrap_dcs_check_timeline: false
patroni_bootstrap_dcs_standby_cluster:
  - { option: "host",                     value: "" }
  - { option: "port",                     value: "" }
  - { option: "primary_slot_name",        value: "" }
  - { option: "create_replica_methods",   value: "" }
  - { option: "restore_command",          value: "" }
  - { option: "archive_cleanup_command",  value: "" }
  - { option: "recovery_min_apply_delay", value: "" }

patroni_bootstrap_dcs_pg_use_pg_rewind: false
patroni_bootstrap_dcs_pg_use_slots: true
patroni_bootstrap_dcs_pg_parameters:
  - { option: "max_connections",           value: "100" }
  - { option: "max_locks_per_transaction", value: "64" }
  - { option: "max_worker_processes",      value: "8" }
  - { option: "max_prepared_transactions", value: "0" }
  - { option: "wal_level",                 value: "replica" }
  - { option: "wal_log_hints",             value: "on" }
  - { option: "track_commit_timestamp",    value: "off" }
  - { option: "max_wal_senders",           value: "10" }
  - { option: "max_replication_slots",     value: "10" }
  - { option: "wal_keep_segments",         value: "8" }

patroni_bootstrap_dcs_pg_recovery_conf: []
#  - { option: "standby_mode",    value: "on" }
#  - { option: "restore_command", value: "cp ../wal_archive/%f %p" }

patroni_bootstrap_dcs_pg_pg_hba: []
#  - { type: "host", database: "all",         user: "all",                                address: "0.0.0.0/0", method: "ident", options: "map=omicron" }
#  - { type: "host", database: "replication", user: "{{ patroni_replication_username }}", address: "0.0.0.0/0", method: "md5" }

patroni_bootstrap_dcs_pg_pg_ident: []
#  - { mapname: "omicron", sysuser: "robert", pguser: "bob" }

patroni_bootstrap_dcs_slots: []
#  - { name: "permanent_physical_1", type: "physical" }
#  - { name: "permanent_logical_1",  type: "logical", database: "foo", plugin: "pgoutput" }

# https://patroni.readthedocs.io/en/latest/replica_bootstrap.html#bootstrap
patroni_bootstrap_method_name: ""
patroni_bootstrap_method_command: ""
patroni_bootstrap_method_keep_existing_recovery_conf: false
patroni_bootstrap_method_recovery_conf: []
#  - { option: "standby_mode",    value: "on" }
#  - { option: "restore_command", value: "cp ../wal_archive/%f %p" }

patroni_bootstrap_initdb:
  - { option: "encoding", value: "UTF8" }
  - { option: "data-checksums" }

patroni_bootstrap_pg_hba:
#  - { type: "host", database: "all",         user: "all",                                address: "0.0.0.0/0", method: "ident", options: "map=omicron" }
  - { type: "host", database: "replication", user: "{{ patroni_replication_username }}", address: "0.0.0.0/0", method: "md5" }
  - { type: "host", database: "all", user: "all", address: "0.0.0.0/0", method: "md5" }

patroni_bootstrap_post_bootstrap: "" #TODO
patroni_bootstrap_post_init: "" #TODO

patroni_bootstrap_users:
  - { name: "{{ patroni_superuser_username }}",   password: "{{ patroni_superuser_password }}",   options: [] }
  - { name: "{{ patroni_replication_username }}", password: "{{ patroni_replication_password }}", options: ['replication'] }

patroni_pg_use_unix_socket: true
patroni_pg_listen: 0.0.0.0:5432
patroni_pg_connect_address: "{{ ansible_host }}:5432"

# https://patroni.readthedocs.io/en/latest/SETTINGS.html#postgresql
patroni_pg_authentication:
  - { type: "superuser",   username: "{{ patroni_superuser_username }}",   password: "{{ patroni_superuser_password }}" }
  - { type: "replication", username: "{{ patroni_replication_username }}", password: "{{ patroni_replication_password }}" }

patroni_pg_callbacks:
  - { event: "on_reload",      script: "" }
  - { event: "on_restart",     script: "" }
  - { event: "on_role_change", script: "" }
  - { event: "on_start",       script: "" }
  - { event: "on_stop",        script: "" }

patroni_pg_create_replica_methods:
  - basebackup

patroni_pg_basebackup: []
#  - { option: "checkpoint", value: "fast" }
#  - { option: "max-rate",   value: "100M" }
#  - { option: "verbose" }

patroni_pg_recovery_conf: []
#  - { option: "standby_mode",    value: "on" }
#  - { option: "restore_command", value: "cp ../wal_archive/%f %p" }

patroni_pg_custom_conf: "" #TODO

patroni_pg_parameters:
  - { option: "unix_socket_directories", value: "/var/run/postgresql" }

patroni_pg_hba: []
#  - { type: "host", database: "all",         user: "all",                                address: "0.0.0.0/0", method: "ident", options: "map=omicron" }
#  - { type: "host", database: "replication", user: "{{ patroni_replication_username }}", address: "0.0.0.0/0", method: "md5" }

patroni_pg_ident: []
#  - { mapname: "omicron", sysuser: "robert", pguser: "bob" }

patroni_pg_ctl_timeout: 60

patroni_pg_remove_data_directory_on_rewind_failure: false
patroni_pg_remove_data_directory_on_diverged_timelines: false

# https://patroni.readthedocs.io/en/latest/SETTINGS.html#watchdog
# https://patroni.readthedocs.io/en/latest/watchdog.html
patroni_watchdog_mode: automatic # use quotes for 'off' value
patroni_watchdog_device: /dev/watchdog
patroni_watchdog_safety_margin: 5

patroni_tags:
  - { name: "nofailover",    value: "false" }
  - { name: "noloadbalance", value: "false" }
  - { name: "clonefrom",     value: "false" }
  - { name: "nosync",        value: "false" }
  - { name: "replicatefrom", value: "" }

# HAproxy
haproxy_postgresql_port_rewritten: 15432
haproxy_postgresql_port_readonly: 15433