---

- name: Install keepalived-tantor-all (RHEL-like systems)
  when: ansible_os_family in ["RED", "Centos", "Rocky", "RedHat"]
  ansible.builtin.yum:
    name: >-
      {{
        'keepalived-tantor-all-' + keepalived_package_version
        if keepalived_package_version | length > 0
        else
        'keepalived-tantor-all'
      }}
    state: present
    allow_downgrade: true
  register: package_status
  until: package_status is success
  delay: 5
  retries: 3
  environment: "{{ proxy_env | default({}) }}"
  tags: keepalived_install, keepalived

- name: Install keepalived-tantor-all (Debian-like systems)
  when: ansible_os_family in ["Astra Linux", "Debian"]
  ansible.builtin.apt:
    name: >-
      {{
        'keepalived-tantor-all=' + keepalived_package_version
        if keepalived_package_version | length > 0
        else
        'keepalived-tantor-all'
      }}
    state: present
    allow_downgrade: true
  register: package_status
  until: package_status is success
  delay: 5
  retries: 3
  environment: "{{ proxy_env | default({}) }}"
  tags: keepalived_install, keepalived

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /opt/keepalived/scripts
    state: directory
    mode: '0755'
    owner: root
    group: root
  tags: keepalived_conf, keepalived

- name: Create vrrp_script "/opt/keepalived/scripts/haproxy_check.sh"
  ansible.builtin.copy:
    content: |
      #!/bin/bash
      /bin/kill -0 `cat /run/haproxy/haproxy.pid`
    dest: /opt/keepalived/scripts/haproxy_check.sh
    owner: root
    group: root
    mode: "0700"
  notify: "Restart keepalived-tantor service"
  tags: keepalived_conf, keepalived

- name: Generate conf file "/opt/tantor/etc/keepalived/keepalived.conf"
  ansible.builtin.template:
    src: templates/keepalived.conf.j2
    dest: /opt/tantor/etc/keepalived/keepalived.conf
    mode: "0644"
  notify: "Restart keepalived-tantor service"
  when: add_balancer is not defined or not add_balancer|bool
  tags: keepalived_conf, keepalived

- name: Generate check scripts for keepalived
  become: true
  with_items:
    # - f: check_scripts/chk_patroni_async.sh
    #   d: /opt/keepalived/scripts
    - f: check_scripts/chk_patroni_leader.sh
      d: /opt/keepalived/scripts
    # - f: check_scripts/chk_patroni_sync.sh
    #   d: /opt/keepalived/scripts
  ansible.builtin.template:
    src: '{{ item.f }}'
    dest: '{{ item.d }}'
    mode: '0755'
    owner: root
    group: root

- name: Block for tasks with balancer
  when: add_balancer is defined and add_balancer|bool
  tags: keepalived_conf, keepalived
  block:  # for add_balancer.yml
    - name: "Fetch keepalived.conf conf file from {{ groups.balancers[0] }}"
      run_once: true
      ansible.builtin.fetch:
        src: /opt/tantor/etc/keepalived/keepalived.conf
        dest: files/keepalived.conf
        validate_checksum: true
        flat: true
      delegate_to: "{{ groups.balancers[0] }}"

    - name: Copy keepalived.conf conf file to replica
      ansible.builtin.copy:
        src: files/keepalived.conf
        dest: /opt/tantor/etc/keepalived/keepalived.conf
        mode: "0644"
      notify: "Restart keepalived"

    - name: Remove keepalived.conf file from localhost
      become: false
      run_once: true
      ansible.builtin.file:
        path: files/keepalived.conf
        state: absent
      delegate_to: localhost

    - name: Prepare keepalived.conf conf file (replace "interface")
      ansible.builtin.lineinfile:
        path: /opt/tantor/etc/keepalived/keepalived.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backrefs: true
      loop:
        - { regexp: '^.*interface', line: '   interface {{ vip_interface }}' }
      loop_control:
        label: "{{ item.line }}"
      notify: "Restart keepalived"
