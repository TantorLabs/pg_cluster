---
- name: Get current cluster members for deletion check
  when: etcd_cluster_exists
  ansible.builtin.shell: |
    ETCDCTL_API=3 {{ etcd_bin_path }} \
      --endpoints=https://{{ hostvars[etcd_leader]['ansible_default_ipv4']['address'] }}:{{ etcd_port_client }} \
      --cacert={{ etcd_conf_dir }}/ca.pem \
      --cert={{ etcd_conf_dir }}/{{ hostvars[etcd_leader]['unified_hostname'] }}.pem \
      --key={{ etcd_conf_dir }}/{{ hostvars[etcd_leader]['unified_hostname'] }}-key.pem \
      member list --write-out=json
  register: etcd_current_members_for_deletion
  delegate_to: "{{ etcd_leader }}"
  run_once: true
  changed_when: false
  failed_when: etcd_current_members_for_deletion.rc != 0

- name: Parse current members for deletion
  when: etcd_cluster_exists and etcd_current_members_for_deletion is defined
  ansible.builtin.set_fact:
    existing_member_names: >-
      {{
        (etcd_current_members_for_deletion.stdout | from_json).members |
        selectattr('name', 'defined') |
        map(attribute='name') |
        list
      }}
  run_once: true

- name: Debug deletion comparison
  ansible.builtin.debug:
    msg:
      - "Existing etcd members: {{ existing_member_names | default([]) }}"
      - >-
        Current inventory unified_hostnames: {{ groups['inv_etcd'] |
        map('extract', hostvars, 'unified_hostname') | list }}
      - >-
        Nodes to remove: {{ existing_member_names | default([]) |
        difference(groups['inv_etcd'] | map('extract', hostvars, 'unified_hostname') | list) }}
  when: etcd_cluster_exists
  run_once: true

- name: Identify nodes to remove
  ansible.builtin.set_fact:
    etcd_nodes_to_remove: >-
      {{
        existing_member_names | default([]) |
        difference(groups['inv_etcd'] | map('extract', hostvars, 'unified_hostname') | list)
      }}
  when: etcd_cluster_exists
  run_once: true

- name: Get member IDs for removal using JSON parsing
  when:
    - etcd_cluster_exists
    - etcd_nodes_to_remove is defined
    - etcd_nodes_to_remove | length > 0
  ansible.builtin.shell: |
    ETCDCTL_API=3 {{ etcd_bin_path }} \
      --endpoints=https://{{ hostvars[etcd_leader]['ansible_default_ipv4']['address'] }}:{{ etcd_port_client }} \
      --cacert={{ etcd_conf_dir }}/ca.pem \
      --cert={{ etcd_conf_dir }}/{{ hostvars[etcd_leader]['unified_hostname'] }}.pem \
      --key={{ etcd_conf_dir }}/{{ hostvars[etcd_leader]['unified_hostname'] }}-key.pem \
      member list --write-out=json
  register: etcd_members_for_removal
  delegate_to: "{{ etcd_leader }}"
  run_once: true
  changed_when: false

- name: Parse member IDs to remove
  ansible.builtin.set_fact:
    member_ids_to_remove: >-
      {{
        (etcd_members_for_removal.stdout | from_json).members |
        selectattr('name', 'defined') |
        selectattr('name', 'in', etcd_nodes_to_remove) |
        map(attribute='ID') |
        list
      }}
  when:
    - etcd_cluster_exists
    - etcd_nodes_to_remove is defined
    - etcd_nodes_to_remove | length > 0
  run_once: true

- name: Verify members to remove
  ansible.builtin.debug:
    msg:
      - "Nodes to remove: {{ etcd_nodes_to_remove | default([]) }}"
      - "Member IDs to remove: {{ member_ids_to_remove | default([]) }}"
  when:
    - etcd_cluster_exists
    - etcd_nodes_to_remove is defined
    - etcd_nodes_to_remove | length > 0
  run_once: true

- name: Remove etcd members from cluster
  when:
    - etcd_cluster_exists
    - member_ids_to_remove is defined
    - member_ids_to_remove | length > 0
  ansible.builtin.shell: |
    ETCDCTL_API=3 {{ etcd_bin_path }} \
      --endpoints=https://{{ hostvars[etcd_leader]['ansible_default_ipv4']['address'] }}:{{ etcd_port_client }} \
      --cacert={{ etcd_conf_dir }}/ca.pem \
      --cert={{ etcd_conf_dir }}/{{ hostvars[etcd_leader]['unified_hostname'] }}.pem \
      --key={{ etcd_conf_dir }}/{{ hostvars[etcd_leader]['unified_hostname'] }}-key.pem \
      member remove {{ '%x' | format(item | int) }}
  delegate_to: "{{ etcd_leader }}"
  with_items: "{{ member_ids_to_remove }}"
  register: member_removal_results
  failed_when: >-
    member_removal_results.rc != 0 and
    "not a member" not in member_removal_results.stderr and
    "member not found" not in member_removal_results.stderr
  changed_when: member_removal_results.rc == 0
  run_once: true

- name: Verify member removal
  ansible.builtin.shell: |
    ETCDCTL_API=3 {{ etcd_bin_path }} \
      --endpoints=https://{{ hostvars[etcd_leader]['ansible_default_ipv4']['address'] }}:{{ etcd_port_client }} \
      --cacert={{ etcd_conf_dir }}/ca.pem \
      --cert={{ etcd_conf_dir }}/{{ hostvars[etcd_leader]['unified_hostname'] }}.pem \
      --key={{ etcd_conf_dir }}/{{ hostvars[etcd_leader]['unified_hostname'] }}-key.pem \
      member list --write-out=json
  register: etcd_post_removal_check
  delegate_to: "{{ etcd_leader }}"
  run_once: true
  changed_when: false
  when:
    - etcd_cluster_exists
    - member_ids_to_remove is defined
    - member_ids_to_remove | length > 0

- name: Show post-removal cluster state
  ansible.builtin.debug:
    msg:
      - >-
        Remaining members: {{ (etcd_post_removal_check.stdout | from_json).members |
        selectattr('name', 'defined') | map(attribute='name') | list }}
      - >-
        Unnamed members: {{ (etcd_post_removal_check.stdout | from_json).members |
        rejectattr('name', 'defined') | map(attribute='ID') | list }}
  when:
    - etcd_post_removal_check is defined
    - etcd_post_removal_check.stdout is defined
  run_once: true
